name: Deploy to ECS

on:
  push:
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 12  # Fail if deployment takes longer than 12 minutes
    steps:
      - uses: actions/checkout@v3
      
      - name: Trigger deployment via webhook
        run: |
          echo "üöÄ Deployment triggered via CodeBuild webhook"
          echo "Version: ${{ github.event.head_commit.message }}"
          echo "Commit: ${{ github.sha }}"
      
      - name: Wait for deployment to complete
        timeout-minutes: 10
        run: |
          echo "‚è≥ Waiting for deployment to complete..."
          echo "Monitoring endpoint: http://ch-alb-2140286266.us-east-1.elb.amazonaws.com"
          echo "Commit SHA: ${{ github.sha }}"
          
          # Wait 45 seconds for CodeBuild to start
          sleep 45
          
          # Store initial version for comparison
          INITIAL_VERSION=$(curl -s --max-time 5 http://ch-alb-2140286266.us-east-1.elb.amazonaws.com/health 2>/dev/null | grep -oE '"version":"[^"]+' | cut -d'"' -f4 || echo "unknown")
          echo "Initial version: $INITIAL_VERSION"
          
          # Check deployment status for up to 8 minutes
          for i in {1..16}; do
            echo ""
            echo "[$i/16] Checking deployment status..."
            
            # Try to get health status
            HEALTH=$(curl -s --max-time 5 http://ch-alb-2140286266.us-east-1.elb.amazonaws.com/health 2>/dev/null || echo "{}")
            CURRENT_VERSION=$(echo "$HEALTH" | grep -oE '"version":"[^"]+' | cut -d'"' -f4 || echo "unknown")
            
            # Check if service is healthy
            if echo "$HEALTH" | grep -q "healthy"; then
              echo "‚úÖ Health check passed"
              echo "Current version: $CURRENT_VERSION"
              
              # Check if version changed from initial (indicates new deployment)
              if [ "$CURRENT_VERSION" != "$INITIAL_VERSION" ] && [ "$CURRENT_VERSION" != "unknown" ]; then
                echo "‚úÖ Deployment completed successfully!"
                echo "Version changed from $INITIAL_VERSION to $CURRENT_VERSION"
                exit 0
              else
                # For first deployment or when version doesn't change, just ensure it's healthy
                if [ "$i" -gt 2 ]; then
                  echo "‚úÖ Service is healthy and stable"
                  exit 0
                fi
                echo "‚è≥ Waiting for deployment to stabilize..."
              fi
            else
              echo "‚è≥ Service not yet healthy"
            fi
            
            # Wait 30 seconds before next check
            sleep 30
          done
          
          echo "‚ùå Deployment timeout - exceeded 8 minutes"
          exit 1
      
      - name: Verify final deployment
        if: success()
        run: |
          echo "üéâ Deployment verification:"
          curl -s http://ch-alb-2140286266.us-east-1.elb.amazonaws.com/version
          echo ""
          curl -s http://ch-alb-2140286266.us-east-1.elb.amazonaws.com/health
          echo ""
          echo "‚úÖ Deployment successful!"